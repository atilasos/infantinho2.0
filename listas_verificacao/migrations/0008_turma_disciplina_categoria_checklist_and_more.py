# Generated by Django 5.1.7 on 2025-04-02 21:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('listas_verificacao', '0007_duvida_respostaduvida_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='turma',
            name='disciplina',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='turmas', to='listas_verificacao.disciplina'),
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True)),
                ('cor', models.CharField(default='#000000', max_length=7)),
                ('icone', models.CharField(blank=True, max_length=50)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('data_conclusao', models.DateTimeField(blank=True, null=True)),
                ('concluido', models.BooleanField(default=False)),
                ('prioridade', models.IntegerField(default=0)),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='listas_verificacao.categoria')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Checklist',
                'verbose_name_plural': 'Checklists',
                'ordering': ['-prioridade', 'data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='CircuitoComunicacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('tipo', models.CharField(choices=[('debate', 'Debate'), ('apresentacao', 'Apresentação'), ('reflexao', 'Reflexão Coletiva'), ('feedback', 'Feedback Grupal'), ('planeamento', 'Planeamento Partilhado')], max_length=20)),
                ('data_realizacao', models.DateTimeField()),
                ('duracao', models.IntegerField(help_text='Duração em minutos')),
                ('pontos_principais', models.TextField(blank=True)),
                ('conclusoes', models.TextField(blank=True)),
                ('acoes_decorrentes', models.TextField(blank=True)),
                ('evidencias', models.FileField(blank=True, upload_to='circuitos/')),
                ('aprendizagens', models.ManyToManyField(related_name='circuitos', to='listas_verificacao.aprendizagemessencial')),
                ('organizador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='circuitos_organizados', to=settings.AUTH_USER_MODEL)),
                ('participantes', models.ManyToManyField(related_name='circuitos_participacao', to=settings.AUTH_USER_MODEL)),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='circuitos', to='listas_verificacao.turma')),
            ],
            options={
                'verbose_name': 'Circuito de Comunicação',
                'verbose_name_plural': 'Circuitos de Comunicação',
                'ordering': ['-data_realizacao'],
            },
        ),
        migrations.CreateModel(
            name='ConquistaColetiva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('tipo', models.CharField(choices=[('tutoria', 'Tutoria e Interajuda'), ('partilha', 'Partilha de Recursos'), ('cooperacao', 'Trabalho Cooperativo'), ('comunicacao', 'Comunicação e Discussão'), ('gestao', 'Gestão Partilhada'), ('social', 'Responsabilidade Social'), ('inovacao', 'Inovação Colaborativa'), ('mediacao', 'Mediação e Resolução')], max_length=20)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('contribuicoes', models.TextField(help_text='Descreva as contribuições de cada participante')),
                ('impacto', models.CharField(choices=[('individual', 'Individual'), ('grupo', 'Grupo de Trabalho'), ('turma', 'Turma'), ('escola', 'Escola'), ('comunidade', 'Comunidade')], max_length=20)),
                ('beneficiarios', models.TextField(help_text='Quem se beneficiou desta conquista?')),
                ('feedback_comunidade', models.TextField(blank=True)),
                ('reflexao_impacto', models.TextField(help_text='Reflexão sobre o impacto na comunidade')),
                ('evidencias', models.FileField(blank=True, upload_to='conquistas/')),
                ('links_relacionados', models.TextField(blank=True, help_text='Links para trabalhos, recursos ou projetos relacionados')),
                ('momento_celebracao', models.DateTimeField(blank=True, null=True)),
                ('proximos_passos', models.TextField(blank=True, help_text='Como esta conquista pode evoluir ou inspirar novas iniciativas?')),
                ('aprendizagens', models.ManyToManyField(related_name='conquistas', to='listas_verificacao.aprendizagemessencial')),
                ('criador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conquistas_criadas', to=settings.AUTH_USER_MODEL)),
                ('inspirou_outros', models.ManyToManyField(blank=True, related_name='inspirado_por', to='listas_verificacao.conquistacoletiva')),
                ('participantes', models.ManyToManyField(related_name='conquistas_coletivas_participacao', to=settings.AUTH_USER_MODEL)),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conquistas', to='listas_verificacao.turma')),
                ('validadores', models.ManyToManyField(blank=True, related_name='conquistas_coletivas_validadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Conquista Coletiva',
                'verbose_name_plural': 'Conquistas Coletivas',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='DiarioAprendizagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('partilhado', models.BooleanField(default=False)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diarios_aprendizagem', to=settings.AUTH_USER_MODEL)),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diarios_aprendizagem', to='listas_verificacao.turma')),
            ],
            options={
                'verbose_name': 'Diário de Aprendizagem',
                'verbose_name_plural': 'Diários de Aprendizagem',
                'ordering': ['-data_atualizacao'],
            },
        ),
        migrations.CreateModel(
            name='EntradaDiario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('conteudo', models.TextField()),
                ('tipo', models.CharField(choices=[('reflexao', 'Reflexão'), ('conceito', 'Conceito'), ('duvida', 'Dúvida'), ('descoberta', 'Descoberta'), ('conexao', 'Conexão')], max_length=20)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('anexos', models.FileField(blank=True, null=True, upload_to='anexos_diario/')),
                ('aprendizagens', models.ManyToManyField(blank=True, related_name='entradas_diario', to='listas_verificacao.aprendizagemessencial')),
                ('diario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entradas', to='listas_verificacao.diarioaprendizagem')),
            ],
            options={
                'verbose_name': 'Entrada do Diário',
                'verbose_name_plural': 'Entradas do Diário',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='ComentarioEntrada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conteudo', models.TextField()),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios_diario', to=settings.AUTH_USER_MODEL)),
                ('entrada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios', to='listas_verificacao.entradadiario')),
            ],
            options={
                'verbose_name': 'Comentário de Entrada',
                'verbose_name_plural': 'Comentários de Entradas',
                'ordering': ['data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.CharField(max_length=500)),
                ('descricao', models.TextField(blank=True)),
                ('concluido', models.BooleanField(default=False)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('data_conclusao', models.DateTimeField(blank=True, null=True)),
                ('ordem', models.IntegerField(default=0)),
                ('checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listas_verificacao.checklist')),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Itens',
                'ordering': ['ordem', 'data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='Meta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('progresso', models.IntegerField(default=0)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('checklist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='listas_verificacao.checklist')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Meta',
                'verbose_name_plural': 'Metas',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='MetaAprendizagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('tipo', models.CharField(choices=[('individual', 'Individual'), ('coletiva', 'Coletiva'), ('projeto', 'Projeto de Grupo')], max_length=20)),
                ('estado', models.CharField(choices=[('proposta', 'Proposta'), ('negociacao', 'Em Negociação'), ('aprovada', 'Aprovada'), ('em_andamento', 'Em Andamento'), ('concluida', 'Concluída'), ('ajustada', 'Ajustada')], default='proposta', max_length=20)),
                ('data_proposta', models.DateTimeField(auto_now_add=True)),
                ('data_inicio', models.DateField(blank=True, null=True)),
                ('data_fim', models.DateField(blank=True, null=True)),
                ('data_conclusao', models.DateField(blank=True, null=True)),
                ('justificativa', models.TextField(blank=True)),
                ('plano_acao', models.TextField(blank=True)),
                ('recursos_necessarios', models.TextField(blank=True)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metas_propostas', to=settings.AUTH_USER_MODEL)),
                ('aprendizagens', models.ManyToManyField(related_name='metas', to='listas_verificacao.aprendizagemessencial')),
                ('participantes', models.ManyToManyField(blank=True, related_name='metas_participacao', to=settings.AUTH_USER_MODEL)),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listas_verificacao.turma')),
            ],
            options={
                'verbose_name': 'Meta de Aprendizagem',
                'verbose_name_plural': 'Metas de Aprendizagem',
                'ordering': ['-data_proposta'],
            },
        ),
        migrations.CreateModel(
            name='ConquistaMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('tutoria', 'Tutoria e Interajuda'), ('partilha', 'Partilha de Recursos'), ('cooperacao', 'Trabalho Cooperativo'), ('comunicacao', 'Comunicação e Discussão'), ('gestao', 'Gestão Partilhada'), ('social', 'Responsabilidade Social'), ('inovacao', 'Inovação Colaborativa'), ('mediacao', 'Mediação e Resolução')], max_length=20)),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('contribuicoes', models.TextField(help_text='Descreva as contribuições de cada participante')),
                ('impacto', models.CharField(choices=[('individual', 'Individual'), ('grupo', 'Grupo de Trabalho'), ('turma', 'Turma'), ('escola', 'Escola'), ('comunidade', 'Comunidade')], max_length=20)),
                ('beneficiarios', models.TextField(help_text='Quem se beneficiou desta conquista?')),
                ('feedback_comunidade', models.TextField(blank=True)),
                ('reflexao_impacto', models.TextField(help_text='Reflexão sobre o impacto na comunidade')),
                ('evidencias', models.FileField(blank=True, upload_to='conquistas/')),
                ('links_relacionados', models.TextField(blank=True, help_text='Links para trabalhos, recursos ou projetos relacionados')),
                ('momento_celebracao', models.DateTimeField(blank=True, null=True)),
                ('proximos_passos', models.TextField(blank=True, help_text='Como esta conquista pode evoluir ou inspirar novas iniciativas?')),
                ('inspirou_outros', models.ManyToManyField(blank=True, related_name='inspirado_por', to='listas_verificacao.conquistameta')),
                ('participantes', models.ManyToManyField(related_name='conquistas_meta_participacao', to=settings.AUTH_USER_MODEL)),
                ('validadores', models.ManyToManyField(blank=True, related_name='conquistas_meta_validadas', to=settings.AUTH_USER_MODEL)),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conquistas', to='listas_verificacao.metaaprendizagem')),
            ],
            options={
                'verbose_name': 'Conquista de Meta',
                'verbose_name_plural': 'Conquistas de Metas',
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='AlteracaoMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('prazo', 'Alteração de Prazo'), ('escopo', 'Alteração de Âmbito'), ('recursos', 'Alteração de Recursos'), ('participantes', 'Alteração de Participantes')], max_length=20)),
                ('descricao', models.TextField()),
                ('justificativa', models.TextField()),
                ('data_solicitacao', models.DateTimeField(auto_now_add=True)),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True)),
                ('aprovada', models.BooleanField(default=False)),
                ('comentarios', models.TextField(blank=True)),
                ('aprovada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alteracoes_aprovadas', to=settings.AUTH_USER_MODEL)),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alteracoes', to='listas_verificacao.metaaprendizagem')),
            ],
            options={
                'verbose_name': 'Alteração de Meta',
                'verbose_name_plural': 'Alterações de Metas',
                'ordering': ['-data_solicitacao'],
            },
        ),
        migrations.CreateModel(
            name='AcompanhamentoMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('progresso', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49), (50, 50), (51, 51), (52, 52), (53, 53), (54, 54), (55, 55), (56, 56), (57, 57), (58, 58), (59, 59), (60, 60), (61, 61), (62, 62), (63, 63), (64, 64), (65, 65), (66, 66), (67, 67), (68, 68), (69, 69), (70, 70), (71, 71), (72, 72), (73, 73), (74, 74), (75, 75), (76, 76), (77, 77), (78, 78), (79, 79), (80, 80), (81, 81), (82, 82), (83, 83), (84, 84), (85, 85), (86, 86), (87, 87), (88, 88), (89, 89), (90, 90), (91, 91), (92, 92), (93, 93), (94, 94), (95, 95), (96, 96), (97, 97), (98, 98), (99, 99), (100, 100)])),
                ('observacoes', models.TextField()),
                ('sugestoes', models.TextField(blank=True)),
                ('recursos_sugeridos', models.TextField(blank=True)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acompanhamentos', to='listas_verificacao.metaaprendizagem')),
            ],
            options={
                'verbose_name': 'Acompanhamento de Meta',
                'verbose_name_plural': 'Acompanhamentos de Metas',
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='ProjetoColaborativo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('objetivo', models.TextField()),
                ('estado', models.CharField(choices=[('planeamento', 'Em Planeamento'), ('em_decorrer', 'Em Decorrer'), ('concluido', 'Concluído'), ('apresentado', 'Apresentado')], default='planeamento', max_length=20)),
                ('data_inicio', models.DateField()),
                ('data_fim_prevista', models.DateField()),
                ('data_conclusao', models.DateField(blank=True, null=True)),
                ('responsabilidades', models.TextField(help_text='Distribuição de responsabilidades entre os participantes')),
                ('recursos_necessarios', models.TextField(blank=True)),
                ('desafios', models.TextField(blank=True)),
                ('solucoes', models.TextField(blank=True)),
                ('resultados', models.TextField(blank=True)),
                ('aprendizagens_alcancadas', models.TextField(blank=True)),
                ('feedback_comunidade', models.TextField(blank=True)),
                ('aprendizagens', models.ManyToManyField(related_name='projetos', to='listas_verificacao.aprendizagemessencial')),
                ('criador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projetos_criados', to=settings.AUTH_USER_MODEL)),
                ('participantes', models.ManyToManyField(related_name='projetos_participacao', to=settings.AUTH_USER_MODEL)),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projetos', to='listas_verificacao.turma')),
            ],
            options={
                'verbose_name': 'Projeto Colaborativo',
                'verbose_name_plural': 'Projetos Colaborativos',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='ReconhecimentoContribuicao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('tutoria', 'Tutoria'), ('partilha', 'Partilha de Recursos'), ('organizacao', 'Organização de Atividades'), ('mediacao', 'Mediação'), ('inovacao', 'Inovação'), ('apoio', 'Apoio a Colegas'), ('lideranca', 'Liderança'), ('outro', 'Outro')], max_length=20)),
                ('descricao', models.TextField()),
                ('data_reconhecimento', models.DateTimeField(auto_now_add=True)),
                ('impacto', models.TextField(help_text='Como esta contribuição impactou a comunidade?')),
                ('evidencias', models.FileField(blank=True, upload_to='reconhecimentos/')),
                ('conquista', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reconhecimentos', to='listas_verificacao.conquistacoletiva')),
                ('contribuidor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contribuicoes_reconhecidas', to=settings.AUTH_USER_MODEL)),
                ('reconhecido_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reconhecimentos_feitos', to=settings.AUTH_USER_MODEL)),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reconhecimentos', to='listas_verificacao.turma')),
            ],
            options={
                'verbose_name': 'Reconhecimento de Contribuição',
                'verbose_name_plural': 'Reconhecimentos de Contribuições',
                'ordering': ['-data_reconhecimento'],
            },
        ),
        migrations.CreateModel(
            name='ReflexaoMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conteudo', models.TextField()),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('nivel_satisfacao', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('dificuldades_encontradas', models.TextField(blank=True)),
                ('estrategias_sucesso', models.TextField(blank=True)),
                ('sugestoes_melhoria', models.TextField(blank=True)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflexoes', to='listas_verificacao.metaaprendizagem')),
            ],
            options={
                'verbose_name': 'Reflexão de Meta',
                'verbose_name_plural': 'Reflexões de Metas',
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='ConexaoAprendizagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField()),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('aprendizagem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conexoes_diario', to='listas_verificacao.aprendizagemessencial')),
                ('entrada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conexoes', to='listas_verificacao.entradadiario')),
            ],
            options={
                'verbose_name': 'Conexão de Aprendizagem',
                'verbose_name_plural': 'Conexões de Aprendizagem',
                'unique_together': {('entrada', 'aprendizagem')},
            },
        ),
    ]
